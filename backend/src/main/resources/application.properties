# Application
spring.application.name=civilify

# Server
server.port=8081

# Firebase Configuration
firebase.database.url=${FIREBASE_DATABASE_URL}
firebase.project.id=${FIREBASE_PROJECT_ID}
firebase.service-account=${FIREBASE_SERVICE_ACCOUNT_FILE}
firebase.api-key=${FIREBASE_API_KEY}

# CORS Configuration (for frontend development)
cors.allowed-origins=${CORS_ALLOWED_ORIGINS}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}

# Cloudinary Configuration
cloudinary.cloudName=${CLOUDINARY_CLOUD_NAME}
cloudinary.apiKey=${CLOUDINARY_API_KEY}
cloudinary.apiSecret=${CLOUDINARY_API_SECRET}
cloudinary.uploadPreset=${CLOUDINARY_UPLOAD_PRESET}

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile

# Disable JPA since we're using Firestore
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

# Disable Spring Cloud GCP auto-configuration
spring.cloud.gcp.firestore.enabled=false
spring.cloud.gcp.core.enabled=false

# Logging (optional)
logging.level.org.springframework.web=INFO
logging.level.com.capstone.civilify=DEBUG

# JWT Configuration
jwt.secret=${JWT_SECRET:civilify-jwt-secret-key-should-be-very-long-and-secure-in-production}
jwt.expiration=${JWT_EXPIRATION:86400000}

# OpenAI Configuration
openai.api.key=${OPENAI_API_KEY}
openai.model=${OPENAI_MODEL:gpt-3.5-turbo}

