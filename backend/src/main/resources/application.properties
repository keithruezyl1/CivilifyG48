# Application
spring.application.name=civilify

# Server
server.port=8081

# Firebase Configuration
firebase.database.url=${FIREBASE_DATABASE_URL}
firebase.project.id=${FIREBASE_PROJECT_ID}
firebase.service-account=${FIREBASE_SERVICE_ACCOUNT_FILE:civilify-a9de6-firebase-adminsdk-fbsvc-7a43e9e197.json}
firebase.api-key=${FIREBASE_API_KEY}

# CORS Configuration (for frontend development)
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173,http://127.0.0.1:5173,http://127.0.0.1:3000}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}

# Cloudinary Configuration
cloudinary.cloudName=${CLOUDINARY_CLOUD_NAME}
cloudinary.apiKey=${CLOUDINARY_API_KEY}
cloudinary.apiSecret=${CLOUDINARY_API_SECRET}
cloudinary.uploadPreset=${CLOUDINARY_UPLOAD_PRESET}

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile

# Disable JPA since we're using Firestore
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration

# Disable Spring Cloud GCP auto-configuration
spring.cloud.gcp.firestore.enabled=false
spring.cloud.gcp.core.enabled=false

# Logging (optional)
logging.level.org.springframework.web=INFO
logging.level.com.capstone.civilify=DEBUG

# JWT Configuration
jwt.secret=${JWT_SECRET:civilify-jwt-secret-key-should-be-very-long-and-secure-in-production}
# Default expiration: 7 days (604800000 milliseconds)
jwt.expiration=${JWT_EXPIRATION:604800000}

# OpenAI Configuration
# Default OpenAI settings (fallback)
openai.api.key=${OPENAI_API_KEY}
openai.model=${OPENAI_MODEL:gpt-4o-mini}
openai.organization=${OPENAI_ORG:}
openai.project=${OPENAI_PROJECT:}

# General Legal Information mode (A) settings - using GPT-3.5 Turbo
openai.gli.api.key=${OPENAI_GLI_API_KEY}
openai.gli.model=${OPENAI_GLI_MODEL:gpt-4o-mini}
openai.gli.temperature=0.3
openai.gli.top-p=1.0
openai.gli.frequency-penalty=0.0
openai.gli.presence-penalty=0.0
openai.gli.max-tokens=600
openai.gli.stream=false

# Case Plausibility Assessment mode (B) settings - using GPT-4o
openai.cpa.api.key=${OPENAI_CPA_API_KEY}
openai.cpa.model=${OPENAI_CPA_MODEL:gpt-4o}
openai.cpa.temperature=0.2
openai.cpa.top-p=1.0
openai.cpa.frequency-penalty=0.0
openai.cpa.presence-penalty=0.0
openai.cpa.max-tokens=2000
openai.cpa.stream=false

# Knowledge Base Configuration (Law Entry Extension Integration)
# Point Civilify to your deployed Villy service (Render) by default.
# Override via env var KNOWLEDGE_BASE_API_URL in other environments if needed.
knowledge.base.api.url=${KNOWLEDGE_BASE_API_URL:https://law-entry-extension.onrender.com/api}
knowledge.base.api.key=${KNOWLEDGE_BASE_API_KEY}
knowledge.base.timeout=${KNOWLEDGE_BASE_TIMEOUT:30000}
knowledge.base.retry.attempts=${KNOWLEDGE_BASE_RETRY_ATTEMPTS:3}
knowledge.base.retry.delay=${KNOWLEDGE_BASE_RETRY_DELAY:1000}
# Cache TTL and minimal query length safeguards (non-breaking defaults)
# knowledge.base.cache.ttl.seconds=60
# knowledge.base.query.min.length=3
# Enable KB by default; you can disable by setting KNOWLEDGE_BASE_ENABLED=false
knowledge.base.enabled=${KNOWLEDGE_BASE_ENABLED:true}

